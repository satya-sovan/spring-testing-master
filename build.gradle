plugins {
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'java'
	id 'idea'
	id 'eclipse'
	id 'jacoco'
}

group = 'com.hamvocke.spring-testing'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}
jacoco {
    toolVersion = "0.8.8"  // or any version compatible with your setup
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.rest-assured:rest-assured:5.3.2'
	testImplementation 'com.github.tomakehurst:wiremock:3.0.1'
	testImplementation 'org.seleniumhq.selenium:selenium-java'
	testImplementation 'au.com.dius.pact.consumer:junit5:4.4.8'
	testImplementation 'au.com.dius.pact.provider:junit5spring:4.4.8'
	testImplementation 'io.github.bonigarcia:webdrivermanager:5.6.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

task testCoverage(type: JacocoReport) {
	executionData fileTree(dir: "$buildDir", includes: [
			"jacoco/test.exec",
	])
	sourceDirectories.setFrom files(sourceSets.main.allSource.srcDirs)
	classDirectories.setFrom files(sourceSets.main.output)

	reports {
		xml.required.set(true)
		html.required.set(true)
	}
}

tasks.named('build') {
	dependsOn(tasks.named('jacocoTestReport'))
}